package HashFunctions;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

public class Md2 {
    public static String encryptThisString(String input)
    {
        try {
            MessageDigest md = MessageDigest.getInstance("MD2");

            // digest() method is called
            // to calculate message digest of the input string
            // returned as array of byte
            byte[] messageDigest = md.digest(input.getBytes());

            // Convert byte array into signum representation
            BigInteger no = new BigInteger(1, messageDigest);

            // Convert message digest into hex value
            StringBuilder hashtext = new StringBuilder(no.toString(16));

            // Add preceding 0s to make it 32 bit
            while (hashtext.length() < 32) {
                hashtext.insert(0, "0");
            }

            // return the HashText
            return hashtext.toString();
        }

        // For specifying wrong message digest algorithms
        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    // Driver code
    public static void main(String[] args) throws
            NoSuchAlgorithmException
    {
        System.out.println("HashCode Generated by MD2 for: ");

        Scanner sc=new Scanner(System.in);
        String s1= sc.nextLine();
        System.out.println("\n" + s1 + " : " + encryptThisString(s1));

        String s2 = sc.nextLine();
        System.out.println("\n" + s2 + " : " + encryptThisString(s2));
    }
}
